{
  "classMap": [
    [
      "Animation.MixBlend",
      {
        "className": "Animation.MixBlend",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "setup",
          "first",
          "replace",
          "add"
        ]
      }
    ],
    [
      "Animation.MixDirection",
      {
        "className": "Animation.MixDirection",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "in",
          "out"
        ]
      }
    ],
    [
      "Animation.Property",
      {
        "className": "Animation.Property",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "rotate",
          "x",
          "y",
          "scaleX",
          "scaleY",
          "shearX",
          "shearY",
          "inherit",
          "rgb",
          "alpha",
          "rgb2",
          "attachment",
          "deform",
          "event",
          "drawOrder",
          "ikConstraint",
          "transformConstraint",
          "pathConstraintPosition",
          "pathConstraintSpacing",
          "pathConstraintMix",
          "physicsConstraintInertia",
          "physicsConstraintStrength",
          "physicsConstraintDamping",
          "physicsConstraintMass",
          "physicsConstraintWind",
          "physicsConstraintGravity",
          "physicsConstraintMix",
          "physicsConstraintReset",
          "sequence",
          "sliderTime",
          "sliderMix"
        ]
      }
    ],
    [
      "Animation.Timeline",
      {
        "className": "Animation.Timeline",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getPropertyIds",
            "returnType": "String[]"
          },
          {
            "methodName": "getFrames",
            "returnType": "float[]"
          },
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          },
          {
            "methodName": "getFrameCount",
            "returnType": "int"
          },
          {
            "methodName": "getDuration",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.AlphaTimeline",
          "Animation.AttachmentTimeline",
          "Animation.DeformTimeline",
          "Animation.DrawOrderTimeline",
          "Animation.EventTimeline",
          "Animation.IkConstraintTimeline",
          "Animation.InheritTimeline",
          "Animation.PathConstraintMixTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintResetTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.SequenceTimeline",
          "Animation.ShearTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.TransformConstraintTimeline",
          "Animation.TranslateTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ],
        "allImplementations": [
          "Animation.AlphaTimeline",
          "Animation.AttachmentTimeline",
          "Animation.BoneTimeline1",
          "Animation.BoneTimeline2",
          "Animation.ConstraintTimeline1",
          "Animation.CurveTimeline",
          "Animation.CurveTimeline1",
          "Animation.DeformTimeline",
          "Animation.DrawOrderTimeline",
          "Animation.EventTimeline",
          "Animation.IkConstraintTimeline",
          "Animation.InheritTimeline",
          "Animation.PathConstraintMixTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintResetTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.SequenceTimeline",
          "Animation.ShearTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.SlotCurveTimeline",
          "Animation.TransformConstraintTimeline",
          "Animation.TranslateTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ]
      }
    ],
    [
      "Animation.SlotTimeline",
      {
        "className": "Animation.SlotTimeline",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getSlotIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.AlphaTimeline",
          "Animation.AttachmentTimeline",
          "Animation.DeformTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline",
          "Animation.SequenceTimeline"
        ],
        "allImplementations": [
          "Animation.AlphaTimeline",
          "Animation.AttachmentTimeline",
          "Animation.DeformTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline",
          "Animation.SequenceTimeline",
          "Animation.SlotCurveTimeline"
        ]
      }
    ],
    [
      "Animation.CurveTimeline",
      {
        "className": "Animation.CurveTimeline",
        "superTypes": [
          "Timeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.AlphaTimeline",
          "Animation.DeformTimeline",
          "Animation.IkConstraintTimeline",
          "Animation.PathConstraintMixTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.TransformConstraintTimeline",
          "Animation.TranslateTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ],
        "allImplementations": [
          "Animation.AlphaTimeline",
          "Animation.BoneTimeline1",
          "Animation.BoneTimeline2",
          "Animation.ConstraintTimeline1",
          "Animation.CurveTimeline1",
          "Animation.DeformTimeline",
          "Animation.IkConstraintTimeline",
          "Animation.PathConstraintMixTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.SlotCurveTimeline",
          "Animation.TransformConstraintTimeline",
          "Animation.TranslateTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ]
      }
    ],
    [
      "Animation.CurveTimeline1",
      {
        "className": "Animation.CurveTimeline1",
        "superTypes": [
          "CurveTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.AlphaTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ],
        "allImplementations": [
          "Animation.AlphaTimeline",
          "Animation.BoneTimeline1",
          "Animation.ConstraintTimeline1",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ]
      }
    ],
    [
      "Animation.BoneTimeline2",
      {
        "className": "Animation.BoneTimeline2",
        "superTypes": [
          "CurveTimeline",
          "BoneTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline"
          },
          {
            "name": "BoneTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          },
          {
            "methodName": "getBoneIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.ScaleTimeline",
          "Animation.ShearTimeline",
          "Animation.TranslateTimeline"
        ],
        "allImplementations": [
          "Animation.ScaleTimeline",
          "Animation.ShearTimeline",
          "Animation.TranslateTimeline"
        ]
      }
    ],
    [
      "Animation.BoneTimeline",
      {
        "className": "Animation.BoneTimeline",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getBoneIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.InheritTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.TranslateTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ],
        "allImplementations": [
          "Animation.BoneTimeline1",
          "Animation.BoneTimeline2",
          "Animation.InheritTimeline",
          "Animation.RotateTimeline",
          "Animation.ScaleTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.TranslateTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ]
      }
    ],
    [
      "Animation.BoneTimeline1",
      {
        "className": "Animation.BoneTimeline1",
        "superTypes": [
          "CurveTimeline1",
          "BoneTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline1"
          },
          {
            "name": "BoneTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getBoneIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.RotateTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ],
        "allImplementations": [
          "Animation.RotateTimeline",
          "Animation.ScaleXTimeline",
          "Animation.ScaleYTimeline",
          "Animation.ShearXTimeline",
          "Animation.ShearYTimeline",
          "Animation.TranslateXTimeline",
          "Animation.TranslateYTimeline"
        ]
      }
    ],
    [
      "Animation.RotateTimeline",
      {
        "className": "Animation.RotateTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.TranslateTimeline",
      {
        "className": "Animation.TranslateTimeline",
        "superTypes": [
          "BoneTimeline2"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline2"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.TranslateXTimeline",
      {
        "className": "Animation.TranslateXTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.TranslateYTimeline",
      {
        "className": "Animation.TranslateYTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ScaleTimeline",
      {
        "className": "Animation.ScaleTimeline",
        "superTypes": [
          "BoneTimeline2"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline2"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ScaleXTimeline",
      {
        "className": "Animation.ScaleXTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ScaleYTimeline",
      {
        "className": "Animation.ScaleYTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ShearTimeline",
      {
        "className": "Animation.ShearTimeline",
        "superTypes": [
          "BoneTimeline2"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline2"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ShearXTimeline",
      {
        "className": "Animation.ShearXTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ShearYTimeline",
      {
        "className": "Animation.ShearYTimeline",
        "superTypes": [
          "BoneTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "BoneTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.InheritTimeline",
      {
        "className": "Animation.InheritTimeline",
        "superTypes": [
          "Timeline",
          "BoneTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          },
          {
            "name": "BoneTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getBoneIndex",
            "returnType": "int"
          },
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.SlotCurveTimeline",
      {
        "className": "Animation.SlotCurveTimeline",
        "superTypes": [
          "CurveTimeline",
          "SlotTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline"
          },
          {
            "name": "SlotTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getSlotIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.DeformTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline"
        ],
        "allImplementations": [
          "Animation.DeformTimeline",
          "Animation.RGB2Timeline",
          "Animation.RGBA2Timeline",
          "Animation.RGBATimeline",
          "Animation.RGBTimeline"
        ]
      }
    ],
    [
      "Animation.RGBATimeline",
      {
        "className": "Animation.RGBATimeline",
        "superTypes": [
          "SlotCurveTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "SlotCurveTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.RGBTimeline",
      {
        "className": "Animation.RGBTimeline",
        "superTypes": [
          "SlotCurveTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "SlotCurveTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.AlphaTimeline",
      {
        "className": "Animation.AlphaTimeline",
        "superTypes": [
          "CurveTimeline1",
          "SlotTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline1"
          },
          {
            "name": "SlotTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getSlotIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.RGBA2Timeline",
      {
        "className": "Animation.RGBA2Timeline",
        "superTypes": [
          "SlotCurveTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "SlotCurveTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.RGB2Timeline",
      {
        "className": "Animation.RGB2Timeline",
        "superTypes": [
          "SlotCurveTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "SlotCurveTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.AttachmentTimeline",
      {
        "className": "Animation.AttachmentTimeline",
        "superTypes": [
          "Timeline",
          "SlotTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          },
          {
            "name": "SlotTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameCount",
            "returnType": "int"
          },
          {
            "methodName": "getSlotIndex",
            "returnType": "int"
          },
          {
            "methodName": "getAttachmentNames",
            "returnType": "String[]"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.DeformTimeline",
      {
        "className": "Animation.DeformTimeline",
        "superTypes": [
          "SlotCurveTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "SlotCurveTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameCount",
            "returnType": "int"
          },
          {
            "methodName": "getAttachment",
            "returnType": "VertexAttachment"
          },
          {
            "methodName": "getVertices",
            "returnType": "float[][]"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.SequenceTimeline",
      {
        "className": "Animation.SequenceTimeline",
        "superTypes": [
          "Timeline",
          "SlotTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          },
          {
            "name": "SlotTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          },
          {
            "methodName": "getSlotIndex",
            "returnType": "int"
          },
          {
            "methodName": "getAttachment",
            "returnType": "Attachment"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.EventTimeline",
      {
        "className": "Animation.EventTimeline",
        "superTypes": [
          "Timeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameCount",
            "returnType": "int"
          },
          {
            "methodName": "getEvents",
            "returnType": "Event[]"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.DrawOrderTimeline",
      {
        "className": "Animation.DrawOrderTimeline",
        "superTypes": [
          "Timeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameCount",
            "returnType": "int"
          },
          {
            "methodName": "getDrawOrders",
            "returnType": "int[][]"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ConstraintTimeline",
      {
        "className": "Animation.ConstraintTimeline",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getConstraintIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.IkConstraintTimeline",
          "Animation.PathConstraintMixTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintResetTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.TransformConstraintTimeline"
        ],
        "allImplementations": [
          "Animation.ConstraintTimeline1",
          "Animation.IkConstraintTimeline",
          "Animation.PathConstraintMixTimeline",
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintResetTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline",
          "Animation.TransformConstraintTimeline"
        ]
      }
    ],
    [
      "Animation.IkConstraintTimeline",
      {
        "className": "Animation.IkConstraintTimeline",
        "superTypes": [
          "CurveTimeline",
          "ConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline"
          },
          {
            "name": "ConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          },
          {
            "methodName": "getConstraintIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.TransformConstraintTimeline",
      {
        "className": "Animation.TransformConstraintTimeline",
        "superTypes": [
          "CurveTimeline",
          "ConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline"
          },
          {
            "name": "ConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          },
          {
            "methodName": "getConstraintIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.ConstraintTimeline1",
      {
        "className": "Animation.ConstraintTimeline1",
        "superTypes": [
          "CurveTimeline1",
          "ConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline1"
          },
          {
            "name": "ConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getConstraintIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline"
        ],
        "allImplementations": [
          "Animation.PathConstraintPositionTimeline",
          "Animation.PathConstraintSpacingTimeline",
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintTimeline",
          "Animation.PhysicsConstraintWindTimeline",
          "Animation.SliderMixTimeline",
          "Animation.SliderTimeline"
        ]
      }
    ],
    [
      "Animation.PathConstraintPositionTimeline",
      {
        "className": "Animation.PathConstraintPositionTimeline",
        "superTypes": [
          "ConstraintTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PathConstraintSpacingTimeline",
      {
        "className": "Animation.PathConstraintSpacingTimeline",
        "superTypes": [
          "ConstraintTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PathConstraintMixTimeline",
      {
        "className": "Animation.PathConstraintMixTimeline",
        "superTypes": [
          "CurveTimeline",
          "ConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "CurveTimeline"
          },
          {
            "name": "ConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getFrameEntries",
            "returnType": "int"
          },
          {
            "methodName": "getConstraintIndex",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintTimeline",
      {
        "className": "Animation.PhysicsConstraintTimeline",
        "superTypes": [
          "ConstraintTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline"
        ],
        "allImplementations": [
          "Animation.PhysicsConstraintDampingTimeline",
          "Animation.PhysicsConstraintGravityTimeline",
          "Animation.PhysicsConstraintInertiaTimeline",
          "Animation.PhysicsConstraintMassTimeline",
          "Animation.PhysicsConstraintMixTimeline",
          "Animation.PhysicsConstraintStrengthTimeline",
          "Animation.PhysicsConstraintWindTimeline"
        ]
      }
    ],
    [
      "Animation.PhysicsConstraintInertiaTimeline",
      {
        "className": "Animation.PhysicsConstraintInertiaTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintStrengthTimeline",
      {
        "className": "Animation.PhysicsConstraintStrengthTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintDampingTimeline",
      {
        "className": "Animation.PhysicsConstraintDampingTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintMassTimeline",
      {
        "className": "Animation.PhysicsConstraintMassTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintWindTimeline",
      {
        "className": "Animation.PhysicsConstraintWindTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintGravityTimeline",
      {
        "className": "Animation.PhysicsConstraintGravityTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintMixTimeline",
      {
        "className": "Animation.PhysicsConstraintMixTimeline",
        "superTypes": [
          "PhysicsConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "PhysicsConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.PhysicsConstraintResetTimeline",
      {
        "className": "Animation.PhysicsConstraintResetTimeline",
        "superTypes": [
          "Timeline",
          "ConstraintTimeline"
        ],
        "superTypeDetails": [
          {
            "name": "Timeline"
          },
          {
            "name": "ConstraintTimeline"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getConstraintIndex",
            "returnType": "int"
          },
          {
            "methodName": "getFrameCount",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.SliderTimeline",
      {
        "className": "Animation.SliderTimeline",
        "superTypes": [
          "ConstraintTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation.SliderMixTimeline",
      {
        "className": "Animation.SliderMixTimeline",
        "superTypes": [
          "ConstraintTimeline1"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintTimeline1"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Animation",
      {
        "className": "Animation",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Animation.java",
        "getters": [
          {
            "methodName": "getTimelines",
            "returnType": "Array<Timeline>"
          },
          {
            "methodName": "getDuration",
            "returnType": "float"
          },
          {
            "methodName": "getBones",
            "returnType": "IntArray"
          },
          {
            "methodName": "getName",
            "returnType": "String"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "AnimationState.TrackEntry",
      {
        "className": "AnimationState.TrackEntry",
        "superTypes": [
          "Poolable"
        ],
        "superTypeDetails": [
          {
            "name": "Poolable"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationState.java",
        "getters": [
          {
            "methodName": "getTrackIndex",
            "returnType": "int"
          },
          {
            "methodName": "getAnimation",
            "returnType": "Animation"
          },
          {
            "methodName": "getLoop",
            "returnType": "boolean"
          },
          {
            "methodName": "getDelay",
            "returnType": "float"
          },
          {
            "methodName": "getTrackTime",
            "returnType": "float"
          },
          {
            "methodName": "getTrackEnd",
            "returnType": "float"
          },
          {
            "methodName": "getTrackComplete",
            "returnType": "float"
          },
          {
            "methodName": "getAnimationStart",
            "returnType": "float"
          },
          {
            "methodName": "getAnimationEnd",
            "returnType": "float"
          },
          {
            "methodName": "getAnimationLast",
            "returnType": "float"
          },
          {
            "methodName": "getAnimationTime",
            "returnType": "float"
          },
          {
            "methodName": "getTimeScale",
            "returnType": "float"
          },
          {
            "methodName": "getListener",
            "returnType": "@Null AnimationStateListener"
          },
          {
            "methodName": "getAlpha",
            "returnType": "float"
          },
          {
            "methodName": "getEventThreshold",
            "returnType": "float"
          },
          {
            "methodName": "getAlphaAttachmentThreshold",
            "returnType": "float"
          },
          {
            "methodName": "getMixAttachmentThreshold",
            "returnType": "float"
          },
          {
            "methodName": "getMixDrawOrderThreshold",
            "returnType": "float"
          },
          {
            "methodName": "getNext",
            "returnType": "@Null TrackEntry"
          },
          {
            "methodName": "getPrevious",
            "returnType": "@Null TrackEntry"
          },
          {
            "methodName": "getMixTime",
            "returnType": "float"
          },
          {
            "methodName": "getMixDuration",
            "returnType": "float"
          },
          {
            "methodName": "getMixBlend",
            "returnType": "MixBlend"
          },
          {
            "methodName": "getMixingFrom",
            "returnType": "@Null TrackEntry"
          },
          {
            "methodName": "getMixingTo",
            "returnType": "@Null TrackEntry"
          },
          {
            "methodName": "getHoldPrevious",
            "returnType": "boolean"
          },
          {
            "methodName": "getShortestRotation",
            "returnType": "boolean"
          },
          {
            "methodName": "getReverse",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "AnimationState.EventQueue",
      {
        "className": "AnimationState.EventQueue",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationState.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "AnimationState.EventType",
      {
        "className": "AnimationState.EventType",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationState.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "start",
          "interrupt",
          "end",
          "dispose",
          "complete",
          "event"
        ]
      }
    ],
    [
      "AnimationState.AnimationStateListener",
      {
        "className": "AnimationState.AnimationStateListener",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationState.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [],
        "allImplementations": [
          "AnimationState.AnimationStateAdapter"
        ]
      }
    ],
    [
      "AnimationState.AnimationStateAdapter",
      {
        "className": "AnimationState.AnimationStateAdapter",
        "superTypes": [
          "AnimationStateListener"
        ],
        "superTypeDetails": [
          {
            "name": "AnimationStateListener"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationState.java",
        "getters": [],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [],
        "allImplementations": []
      }
    ],
    [
      "AnimationState",
      {
        "className": "AnimationState",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationState.java",
        "getters": [
          {
            "methodName": "getTimeScale",
            "returnType": "float"
          },
          {
            "methodName": "getData",
            "returnType": "AnimationStateData"
          },
          {
            "methodName": "getTracks",
            "returnType": "Array<TrackEntry>"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "AnimationStateData.Key",
      {
        "className": "AnimationStateData.Key",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationStateData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "AnimationStateData",
      {
        "className": "AnimationStateData",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/AnimationStateData.java",
        "getters": [
          {
            "methodName": "getSkeletonData",
            "returnType": "SkeletonData"
          },
          {
            "methodName": "getDefaultMix",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "BlendMode",
      {
        "className": "BlendMode",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/BlendMode.java",
        "getters": [],
        "fields": [
          {
            "fieldName": "sourceAlpha",
            "fieldType": "int source, sourcePMA, destColor,",
            "isFinal": true
          },
          {
            "fieldName": "sourceAlpha",
            "fieldType": "int source, sourcePMA, destColor,",
            "isFinal": true
          },
          {
            "fieldName": "sourceAlpha",
            "fieldType": "int source, sourcePMA, destColor,",
            "isFinal": true
          },
          {
            "fieldName": "sourceAlpha",
            "fieldType": "int source, sourcePMA, destColor,",
            "isFinal": true
          }
        ],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "normal",
          "additive",
          "multiply",
          "screen"
        ]
      }
    ],
    [
      "Bone",
      {
        "className": "Bone",
        "superTypes": [
          "PosedActive"
        ],
        "superTypeDetails": [
          {
            "name": "PosedActive",
            "typeArguments": [
              "BoneData",
              "BoneLocal",
              "BonePose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Bone.java",
        "getters": [
          {
            "methodName": "getParent",
            "returnType": "@Null Bone"
          },
          {
            "methodName": "getChildren",
            "returnType": "Array<Bone>"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "BoneData.Inherit",
      {
        "className": "BoneData.Inherit",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/BoneData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "normal",
          "onlyTranslation",
          "noRotationOrReflection",
          "noScale",
          "noScaleOrReflection"
        ]
      }
    ],
    [
      "BoneData",
      {
        "className": "BoneData",
        "superTypes": [
          "PosedData"
        ],
        "superTypeDetails": [
          {
            "name": "PosedData",
            "typeArguments": [
              "BoneLocal"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/BoneData.java",
        "getters": [
          {
            "methodName": "getIndex",
            "returnType": "int"
          },
          {
            "methodName": "getParent",
            "returnType": "@Null BoneData"
          },
          {
            "methodName": "getLength",
            "returnType": "float"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getIcon",
            "returnType": "@Null String"
          },
          {
            "methodName": "getVisible",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "BoneLocal",
      {
        "className": "BoneLocal",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "BoneLocal"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/BoneLocal.java",
        "getters": [
          {
            "methodName": "getX",
            "returnType": "float"
          },
          {
            "methodName": "getY",
            "returnType": "float"
          },
          {
            "methodName": "getRotation",
            "returnType": "float"
          },
          {
            "methodName": "getScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getScaleY",
            "returnType": "float"
          },
          {
            "methodName": "getShearX",
            "returnType": "float"
          },
          {
            "methodName": "getShearY",
            "returnType": "float"
          },
          {
            "methodName": "getInherit",
            "returnType": "Inherit"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "BonePose",
      {
        "className": "BonePose",
        "superTypes": [
          "BoneLocal",
          "Update"
        ],
        "superTypeDetails": [
          {
            "name": "BoneLocal"
          },
          {
            "name": "Update"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/BonePose.java",
        "getters": [
          {
            "methodName": "getA",
            "returnType": "float"
          },
          {
            "methodName": "getB",
            "returnType": "float"
          },
          {
            "methodName": "getC",
            "returnType": "float"
          },
          {
            "methodName": "getD",
            "returnType": "float"
          },
          {
            "methodName": "getWorldX",
            "returnType": "float"
          },
          {
            "methodName": "getWorldY",
            "returnType": "float"
          },
          {
            "methodName": "getWorldRotationX",
            "returnType": "float"
          },
          {
            "methodName": "getWorldRotationY",
            "returnType": "float"
          },
          {
            "methodName": "getWorldScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getWorldScaleY",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Constraint",
      {
        "className": "Constraint",
        "superTypes": [
          "PosedActive",
          "Update"
        ],
        "superTypeDetails": [
          {
            "name": "PosedActive",
            "typeArguments": [
              "D",
              "P",
              "P"
            ]
          },
          {
            "name": "Update"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Constraint.java",
        "getters": [],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [
          [
            0,
            "T"
          ],
          [
            1,
            "D"
          ],
          [
            2,
            "P"
          ]
        ],
        "concreteImplementations": [
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "TransformConstraint"
        ],
        "allImplementations": [
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "TransformConstraint"
        ]
      }
    ],
    [
      "ConstraintData",
      {
        "className": "ConstraintData",
        "superTypes": [
          "PosedData"
        ],
        "superTypeDetails": [
          {
            "name": "PosedData",
            "typeArguments": [
              "P"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/ConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [
          [
            0,
            "T"
          ],
          [
            1,
            "P"
          ]
        ],
        "concreteImplementations": [
          "IkConstraintData",
          "PathConstraintData",
          "PhysicsConstraintData",
          "SliderData",
          "TransformConstraintData"
        ],
        "allImplementations": [
          "IkConstraintData",
          "PathConstraintData",
          "PhysicsConstraintData",
          "SliderData",
          "TransformConstraintData"
        ]
      }
    ],
    [
      "Event",
      {
        "className": "Event",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Event.java",
        "getters": [
          {
            "methodName": "getInt",
            "returnType": "int"
          },
          {
            "methodName": "getFloat",
            "returnType": "float"
          },
          {
            "methodName": "getString",
            "returnType": "String"
          },
          {
            "methodName": "getVolume",
            "returnType": "float"
          },
          {
            "methodName": "getBalance",
            "returnType": "float"
          },
          {
            "methodName": "getTime",
            "returnType": "float"
          },
          {
            "methodName": "getData",
            "returnType": "EventData"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "EventData",
      {
        "className": "EventData",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/EventData.java",
        "getters": [
          {
            "methodName": "getInt",
            "returnType": "int"
          },
          {
            "methodName": "getFloat",
            "returnType": "float"
          },
          {
            "methodName": "getString",
            "returnType": "String"
          },
          {
            "methodName": "getAudioPath",
            "returnType": "String"
          },
          {
            "methodName": "getVolume",
            "returnType": "float"
          },
          {
            "methodName": "getBalance",
            "returnType": "float"
          },
          {
            "methodName": "getName",
            "returnType": "String"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "IkConstraint",
      {
        "className": "IkConstraint",
        "superTypes": [
          "Constraint"
        ],
        "superTypeDetails": [
          {
            "name": "Constraint",
            "typeArguments": [
              "IkConstraint",
              "IkConstraintData",
              "IkConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/IkConstraint.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BonePose>"
          },
          {
            "methodName": "getTarget",
            "returnType": "Bone"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "IkConstraintData",
      {
        "className": "IkConstraintData",
        "superTypes": [
          "ConstraintData"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintData",
            "typeArguments": [
              "IkConstraint",
              "IkConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/IkConstraintData.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BoneData>"
          },
          {
            "methodName": "getTarget",
            "returnType": "BoneData"
          },
          {
            "methodName": "getUniform",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "IkConstraintPose",
      {
        "className": "IkConstraintPose",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "IkConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/IkConstraintPose.java",
        "getters": [
          {
            "methodName": "getMix",
            "returnType": "float"
          },
          {
            "methodName": "getSoftness",
            "returnType": "float"
          },
          {
            "methodName": "getBendDirection",
            "returnType": "int"
          },
          {
            "methodName": "getCompress",
            "returnType": "boolean"
          },
          {
            "methodName": "getStretch",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PathConstraint",
      {
        "className": "PathConstraint",
        "superTypes": [
          "Constraint"
        ],
        "superTypeDetails": [
          {
            "name": "Constraint",
            "typeArguments": [
              "PathConstraint",
              "PathConstraintData",
              "PathConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PathConstraint.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BonePose>"
          },
          {
            "methodName": "getSlot",
            "returnType": "Slot"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PathConstraintData.PositionMode",
      {
        "className": "PathConstraintData.PositionMode",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PathConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "fixed",
          "percent"
        ]
      }
    ],
    [
      "PathConstraintData.SpacingMode",
      {
        "className": "PathConstraintData.SpacingMode",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PathConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "length",
          "fixed",
          "percent",
          "proportional"
        ]
      }
    ],
    [
      "PathConstraintData.RotateMode",
      {
        "className": "PathConstraintData.RotateMode",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PathConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "tangent",
          "chain",
          "chainScale"
        ]
      }
    ],
    [
      "PathConstraintData",
      {
        "className": "PathConstraintData",
        "superTypes": [
          "ConstraintData"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintData",
            "typeArguments": [
              "PathConstraint",
              "PathConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PathConstraintData.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BoneData>"
          },
          {
            "methodName": "getSlot",
            "returnType": "SlotData"
          },
          {
            "methodName": "getPositionMode",
            "returnType": "PositionMode"
          },
          {
            "methodName": "getSpacingMode",
            "returnType": "SpacingMode"
          },
          {
            "methodName": "getRotateMode",
            "returnType": "RotateMode"
          },
          {
            "methodName": "getOffsetRotation",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PathConstraintPose",
      {
        "className": "PathConstraintPose",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "PathConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PathConstraintPose.java",
        "getters": [
          {
            "methodName": "getPosition",
            "returnType": "float"
          },
          {
            "methodName": "getSpacing",
            "returnType": "float"
          },
          {
            "methodName": "getMixRotate",
            "returnType": "float"
          },
          {
            "methodName": "getMixX",
            "returnType": "float"
          },
          {
            "methodName": "getMixY",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Physics",
      {
        "className": "Physics",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Physics.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "none",
          "reset",
          "update",
          "pose"
        ]
      }
    ],
    [
      "PhysicsConstraint",
      {
        "className": "PhysicsConstraint",
        "superTypes": [
          "Constraint"
        ],
        "superTypeDetails": [
          {
            "name": "Constraint",
            "typeArguments": [
              "PhysicsConstraint",
              "PhysicsConstraintData",
              "PhysicsConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PhysicsConstraint.java",
        "getters": [
          {
            "methodName": "getBone",
            "returnType": "BonePose"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PhysicsConstraintData",
      {
        "className": "PhysicsConstraintData",
        "superTypes": [
          "ConstraintData"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintData",
            "typeArguments": [
              "PhysicsConstraint",
              "PhysicsConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PhysicsConstraintData.java",
        "getters": [
          {
            "methodName": "getBone",
            "returnType": "BoneData"
          },
          {
            "methodName": "getStep",
            "returnType": "float"
          },
          {
            "methodName": "getX",
            "returnType": "float"
          },
          {
            "methodName": "getY",
            "returnType": "float"
          },
          {
            "methodName": "getRotate",
            "returnType": "float"
          },
          {
            "methodName": "getScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getShearX",
            "returnType": "float"
          },
          {
            "methodName": "getLimit",
            "returnType": "float"
          },
          {
            "methodName": "getInertiaGlobal",
            "returnType": "boolean"
          },
          {
            "methodName": "getStrengthGlobal",
            "returnType": "boolean"
          },
          {
            "methodName": "getDampingGlobal",
            "returnType": "boolean"
          },
          {
            "methodName": "getMassGlobal",
            "returnType": "boolean"
          },
          {
            "methodName": "getWindGlobal",
            "returnType": "boolean"
          },
          {
            "methodName": "getGravityGlobal",
            "returnType": "boolean"
          },
          {
            "methodName": "getMixGlobal",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PhysicsConstraintPose",
      {
        "className": "PhysicsConstraintPose",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "PhysicsConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PhysicsConstraintPose.java",
        "getters": [
          {
            "methodName": "getInertia",
            "returnType": "float"
          },
          {
            "methodName": "getStrength",
            "returnType": "float"
          },
          {
            "methodName": "getDamping",
            "returnType": "float"
          },
          {
            "methodName": "getMassInverse",
            "returnType": "float"
          },
          {
            "methodName": "getWind",
            "returnType": "float"
          },
          {
            "methodName": "getGravity",
            "returnType": "float"
          },
          {
            "methodName": "getMix",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Pose",
      {
        "className": "Pose",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Pose.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [
          [
            0,
            "P"
          ]
        ],
        "concreteImplementations": [
          "BoneLocal",
          "IkConstraintPose",
          "PathConstraintPose",
          "PhysicsConstraintPose",
          "SliderPose",
          "SlotPose",
          "TransformConstraintPose"
        ],
        "allImplementations": [
          "BoneLocal",
          "IkConstraintPose",
          "PathConstraintPose",
          "PhysicsConstraintPose",
          "SliderPose",
          "SlotPose",
          "TransformConstraintPose"
        ]
      }
    ],
    [
      "Posed",
      {
        "className": "Posed",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Posed.java",
        "getters": [
          {
            "methodName": "getData",
            "returnType": "D"
          },
          {
            "methodName": "getPose",
            "returnType": "P"
          },
          {
            "methodName": "getAppliedPose",
            "returnType": "A"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [
          [
            0,
            "D"
          ],
          [
            1,
            "P"
          ],
          [
            2,
            "A"
          ]
        ],
        "concreteImplementations": [
          "Bone",
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "Slot",
          "TransformConstraint"
        ],
        "allImplementations": [
          "Bone",
          "Constraint",
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "PosedActive",
          "Slider",
          "Slot",
          "TransformConstraint"
        ]
      }
    ],
    [
      "PosedActive",
      {
        "className": "PosedActive",
        "superTypes": [
          "Posed"
        ],
        "superTypeDetails": [
          {
            "name": "Posed",
            "typeArguments": [
              "D",
              "P",
              "A"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PosedActive.java",
        "getters": [],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [
          [
            0,
            "D"
          ],
          [
            1,
            "P"
          ],
          [
            2,
            "A"
          ]
        ],
        "concreteImplementations": [
          "Bone",
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "TransformConstraint"
        ],
        "allImplementations": [
          "Bone",
          "Constraint",
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "TransformConstraint"
        ]
      }
    ],
    [
      "PosedData",
      {
        "className": "PosedData",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/PosedData.java",
        "getters": [
          {
            "methodName": "getName",
            "returnType": "String"
          },
          {
            "methodName": "getSetupPose",
            "returnType": "P"
          },
          {
            "methodName": "getSkinRequired",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [
          [
            0,
            "P"
          ]
        ],
        "concreteImplementations": [
          "BoneData",
          "IkConstraintData",
          "PathConstraintData",
          "PhysicsConstraintData",
          "SliderData",
          "SlotData",
          "TransformConstraintData"
        ],
        "allImplementations": [
          "BoneData",
          "ConstraintData",
          "IkConstraintData",
          "PathConstraintData",
          "PhysicsConstraintData",
          "SliderData",
          "SlotData",
          "TransformConstraintData"
        ]
      }
    ],
    [
      "Skeleton",
      {
        "className": "Skeleton",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Skeleton.java",
        "getters": [
          {
            "methodName": "getData",
            "returnType": "SkeletonData"
          },
          {
            "methodName": "getBones",
            "returnType": "Array<Bone>"
          },
          {
            "methodName": "getUpdateCache",
            "returnType": "Array<Update>"
          },
          {
            "methodName": "getRootBone",
            "returnType": "Bone"
          },
          {
            "methodName": "getSlots",
            "returnType": "Array<Slot>"
          },
          {
            "methodName": "getDrawOrder",
            "returnType": "Array<Slot>"
          },
          {
            "methodName": "getSkin",
            "returnType": "@Null Skin"
          },
          {
            "methodName": "getConstraints",
            "returnType": "Array<Constraint>"
          },
          {
            "methodName": "getPhysicsConstraints",
            "returnType": "Array<PhysicsConstraint>"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getScaleY",
            "returnType": "float"
          },
          {
            "methodName": "getX",
            "returnType": "float"
          },
          {
            "methodName": "getY",
            "returnType": "float"
          },
          {
            "methodName": "getWindX",
            "returnType": "float"
          },
          {
            "methodName": "getWindY",
            "returnType": "float"
          },
          {
            "methodName": "getGravityX",
            "returnType": "float"
          },
          {
            "methodName": "getGravityY",
            "returnType": "float"
          },
          {
            "methodName": "getTime",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonBinary.Vertices",
      {
        "className": "SkeletonBinary.Vertices",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonBinary.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonBinary.SkeletonInput",
      {
        "className": "SkeletonBinary.SkeletonInput",
        "superTypes": [
          "DataInput"
        ],
        "superTypeDetails": [
          {
            "name": "DataInput"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonBinary.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonBinary.LinkedMesh",
      {
        "className": "SkeletonBinary.LinkedMesh",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonBinary.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonBinary",
      {
        "className": "SkeletonBinary",
        "superTypes": [
          "SkeletonLoader"
        ],
        "superTypeDetails": [
          {
            "name": "SkeletonLoader"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonBinary.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonBounds",
      {
        "className": "SkeletonBounds",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonBounds.java",
        "getters": [
          {
            "methodName": "getMinX",
            "returnType": "float"
          },
          {
            "methodName": "getMinY",
            "returnType": "float"
          },
          {
            "methodName": "getMaxX",
            "returnType": "float"
          },
          {
            "methodName": "getMaxY",
            "returnType": "float"
          },
          {
            "methodName": "getWidth",
            "returnType": "float"
          },
          {
            "methodName": "getHeight",
            "returnType": "float"
          },
          {
            "methodName": "getBoundingBoxes",
            "returnType": "Array<BoundingBoxAttachment>"
          },
          {
            "methodName": "getPolygons",
            "returnType": "Array<FloatArray>"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonData",
      {
        "className": "SkeletonData",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonData.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BoneData>"
          },
          {
            "methodName": "getSlots",
            "returnType": "Array<SlotData>"
          },
          {
            "methodName": "getDefaultSkin",
            "returnType": "@Null Skin"
          },
          {
            "methodName": "getSkins",
            "returnType": "Array<Skin>"
          },
          {
            "methodName": "getEvents",
            "returnType": "Array<EventData>"
          },
          {
            "methodName": "getAnimations",
            "returnType": "Array<Animation>"
          },
          {
            "methodName": "getConstraints",
            "returnType": "Array<ConstraintData>"
          },
          {
            "methodName": "getName",
            "returnType": "@Null String"
          },
          {
            "methodName": "getX",
            "returnType": "float"
          },
          {
            "methodName": "getY",
            "returnType": "float"
          },
          {
            "methodName": "getWidth",
            "returnType": "float"
          },
          {
            "methodName": "getHeight",
            "returnType": "float"
          },
          {
            "methodName": "getReferenceScale",
            "returnType": "float"
          },
          {
            "methodName": "getVersion",
            "returnType": "@Null String"
          },
          {
            "methodName": "getHash",
            "returnType": "@Null String"
          },
          {
            "methodName": "getImagesPath",
            "returnType": "@Null String"
          },
          {
            "methodName": "getAudioPath",
            "returnType": "@Null String"
          },
          {
            "methodName": "getFps",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonJson.LinkedMesh",
      {
        "className": "SkeletonJson.LinkedMesh",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonJson.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonJson",
      {
        "className": "SkeletonJson",
        "superTypes": [
          "SkeletonLoader"
        ],
        "superTypeDetails": [
          {
            "name": "SkeletonLoader"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonJson.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonLoader",
      {
        "className": "SkeletonLoader",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonLoader.java",
        "getters": [
          {
            "methodName": "getScale",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "SkeletonBinary",
          "SkeletonJson"
        ],
        "allImplementations": [
          "SkeletonBinary",
          "SkeletonJson"
        ]
      }
    ],
    [
      "SkeletonRenderer",
      {
        "className": "SkeletonRenderer",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonRenderer.java",
        "getters": [
          {
            "methodName": "getPremultipliedAlphaColors",
            "returnType": "boolean"
          },
          {
            "methodName": "getPremultipliedAlphaBlendModes",
            "returnType": "boolean"
          },
          {
            "methodName": "getSkeletonClipping",
            "returnType": "SkeletonClipping"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonRendererDebug",
      {
        "className": "SkeletonRendererDebug",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SkeletonRendererDebug.java",
        "getters": [
          {
            "methodName": "getShapeRenderer",
            "returnType": "ShapeRenderer"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Skin.SkinEntry",
      {
        "className": "Skin.SkinEntry",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Skin.java",
        "getters": [
          {
            "methodName": "getSlotIndex",
            "returnType": "int"
          },
          {
            "methodName": "getName",
            "returnType": "String"
          },
          {
            "methodName": "getAttachment",
            "returnType": "Attachment"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Skin",
      {
        "className": "Skin",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Skin.java",
        "getters": [
          {
            "methodName": "getAttachments",
            "returnType": "Array<SkinEntry>"
          },
          {
            "methodName": "getBones",
            "returnType": "Array<BoneData>"
          },
          {
            "methodName": "getConstraints",
            "returnType": "Array<ConstraintData>"
          },
          {
            "methodName": "getName",
            "returnType": "String"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Slider",
      {
        "className": "Slider",
        "superTypes": [
          "Constraint"
        ],
        "superTypeDetails": [
          {
            "name": "Constraint",
            "typeArguments": [
              "Slider",
              "SliderData",
              "SliderPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Slider.java",
        "getters": [
          {
            "methodName": "getBone",
            "returnType": "Bone"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SliderData",
      {
        "className": "SliderData",
        "superTypes": [
          "ConstraintData"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintData",
            "typeArguments": [
              "Slider",
              "SliderPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SliderData.java",
        "getters": [
          {
            "methodName": "getAnimation",
            "returnType": "Animation"
          },
          {
            "methodName": "getAdditive",
            "returnType": "boolean"
          },
          {
            "methodName": "getLoop",
            "returnType": "boolean"
          },
          {
            "methodName": "getBone",
            "returnType": "@Null BoneData"
          },
          {
            "methodName": "getProperty",
            "returnType": "@Null FromProperty"
          },
          {
            "methodName": "getOffset",
            "returnType": "float"
          },
          {
            "methodName": "getScale",
            "returnType": "float"
          },
          {
            "methodName": "getLocal",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SliderPose",
      {
        "className": "SliderPose",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "SliderPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SliderPose.java",
        "getters": [
          {
            "methodName": "getTime",
            "returnType": "float"
          },
          {
            "methodName": "getMix",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Slot",
      {
        "className": "Slot",
        "superTypes": [
          "Posed"
        ],
        "superTypeDetails": [
          {
            "name": "Posed",
            "typeArguments": [
              "SlotData",
              "SlotPose",
              "SlotPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Slot.java",
        "getters": [
          {
            "methodName": "getBone",
            "returnType": "Bone"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SlotData",
      {
        "className": "SlotData",
        "superTypes": [
          "PosedData"
        ],
        "superTypeDetails": [
          {
            "name": "PosedData",
            "typeArguments": [
              "SlotPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SlotData.java",
        "getters": [
          {
            "methodName": "getIndex",
            "returnType": "int"
          },
          {
            "methodName": "getBoneData",
            "returnType": "BoneData"
          },
          {
            "methodName": "getAttachmentName",
            "returnType": "@Null String"
          },
          {
            "methodName": "getBlendMode",
            "returnType": "BlendMode"
          },
          {
            "methodName": "getVisible",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SlotPose",
      {
        "className": "SlotPose",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "SlotPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/SlotPose.java",
        "getters": [
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getDarkColor",
            "returnType": "@Null Color"
          },
          {
            "methodName": "getAttachment",
            "returnType": "@Null Attachment"
          },
          {
            "methodName": "getSequenceIndex",
            "returnType": "int"
          },
          {
            "methodName": "getDeform",
            "returnType": "FloatArray"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraint",
      {
        "className": "TransformConstraint",
        "superTypes": [
          "Constraint"
        ],
        "superTypeDetails": [
          {
            "name": "Constraint",
            "typeArguments": [
              "TransformConstraint",
              "TransformConstraintData",
              "TransformConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraint.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BonePose>"
          },
          {
            "methodName": "getSource",
            "returnType": "Bone"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.FromProperty",
      {
        "className": "TransformConstraintData.FromProperty",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [
          {
            "fieldName": "offset",
            "fieldType": "float",
            "isFinal": false
          },
          {
            "fieldName": "to",
            "fieldType": "Array<ToProperty>",
            "isFinal": true
          }
        ],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "TransformConstraintData.FromRotate",
          "TransformConstraintData.FromScaleX",
          "TransformConstraintData.FromScaleY",
          "TransformConstraintData.FromShearY",
          "TransformConstraintData.FromX",
          "TransformConstraintData.FromY"
        ],
        "allImplementations": [
          "TransformConstraintData.FromRotate",
          "TransformConstraintData.FromScaleX",
          "TransformConstraintData.FromScaleY",
          "TransformConstraintData.FromShearY",
          "TransformConstraintData.FromX",
          "TransformConstraintData.FromY"
        ]
      }
    ],
    [
      "TransformConstraintData.ToProperty",
      {
        "className": "TransformConstraintData.ToProperty",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [
          {
            "fieldName": "offset",
            "fieldType": "float",
            "isFinal": false
          },
          {
            "fieldName": "max",
            "fieldType": "float",
            "isFinal": false
          },
          {
            "fieldName": "scale",
            "fieldType": "float",
            "isFinal": false
          }
        ],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "TransformConstraintData.ToRotate",
          "TransformConstraintData.ToScaleX",
          "TransformConstraintData.ToScaleY",
          "TransformConstraintData.ToShearY",
          "TransformConstraintData.ToX",
          "TransformConstraintData.ToY"
        ],
        "allImplementations": [
          "TransformConstraintData.ToRotate",
          "TransformConstraintData.ToScaleX",
          "TransformConstraintData.ToScaleY",
          "TransformConstraintData.ToShearY",
          "TransformConstraintData.ToX",
          "TransformConstraintData.ToY"
        ]
      }
    ],
    [
      "TransformConstraintData.FromRotate",
      {
        "className": "TransformConstraintData.FromRotate",
        "superTypes": [
          "FromProperty"
        ],
        "superTypeDetails": [
          {
            "name": "FromProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.ToRotate",
      {
        "className": "TransformConstraintData.ToRotate",
        "superTypes": [
          "ToProperty"
        ],
        "superTypeDetails": [
          {
            "name": "ToProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.FromX",
      {
        "className": "TransformConstraintData.FromX",
        "superTypes": [
          "FromProperty"
        ],
        "superTypeDetails": [
          {
            "name": "FromProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.ToX",
      {
        "className": "TransformConstraintData.ToX",
        "superTypes": [
          "ToProperty"
        ],
        "superTypeDetails": [
          {
            "name": "ToProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.FromY",
      {
        "className": "TransformConstraintData.FromY",
        "superTypes": [
          "FromProperty"
        ],
        "superTypeDetails": [
          {
            "name": "FromProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.ToY",
      {
        "className": "TransformConstraintData.ToY",
        "superTypes": [
          "ToProperty"
        ],
        "superTypeDetails": [
          {
            "name": "ToProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.FromScaleX",
      {
        "className": "TransformConstraintData.FromScaleX",
        "superTypes": [
          "FromProperty"
        ],
        "superTypeDetails": [
          {
            "name": "FromProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.ToScaleX",
      {
        "className": "TransformConstraintData.ToScaleX",
        "superTypes": [
          "ToProperty"
        ],
        "superTypeDetails": [
          {
            "name": "ToProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.FromScaleY",
      {
        "className": "TransformConstraintData.FromScaleY",
        "superTypes": [
          "FromProperty"
        ],
        "superTypeDetails": [
          {
            "name": "FromProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.ToScaleY",
      {
        "className": "TransformConstraintData.ToScaleY",
        "superTypes": [
          "ToProperty"
        ],
        "superTypeDetails": [
          {
            "name": "ToProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.FromShearY",
      {
        "className": "TransformConstraintData.FromShearY",
        "superTypes": [
          "FromProperty"
        ],
        "superTypeDetails": [
          {
            "name": "FromProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData.ToShearY",
      {
        "className": "TransformConstraintData.ToShearY",
        "superTypes": [
          "ToProperty"
        ],
        "superTypeDetails": [
          {
            "name": "ToProperty"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintData",
      {
        "className": "TransformConstraintData",
        "superTypes": [
          "ConstraintData"
        ],
        "superTypeDetails": [
          {
            "name": "ConstraintData",
            "typeArguments": [
              "TransformConstraint",
              "TransformConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintData.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "Array<BoneData>"
          },
          {
            "methodName": "getSource",
            "returnType": "BoneData"
          },
          {
            "methodName": "getOffsetRotation",
            "returnType": "float"
          },
          {
            "methodName": "getOffsetX",
            "returnType": "float"
          },
          {
            "methodName": "getOffsetY",
            "returnType": "float"
          },
          {
            "methodName": "getOffsetScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getOffsetScaleY",
            "returnType": "float"
          },
          {
            "methodName": "getOffsetShearY",
            "returnType": "float"
          },
          {
            "methodName": "getLocalSource",
            "returnType": "boolean"
          },
          {
            "methodName": "getLocalTarget",
            "returnType": "boolean"
          },
          {
            "methodName": "getAdditive",
            "returnType": "boolean"
          },
          {
            "methodName": "getClamp",
            "returnType": "boolean"
          },
          {
            "methodName": "getProperties",
            "returnType": "Array<FromProperty>"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TransformConstraintPose",
      {
        "className": "TransformConstraintPose",
        "superTypes": [
          "Pose"
        ],
        "superTypeDetails": [
          {
            "name": "Pose",
            "typeArguments": [
              "TransformConstraintPose"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/TransformConstraintPose.java",
        "getters": [
          {
            "methodName": "getMixRotate",
            "returnType": "float"
          },
          {
            "methodName": "getMixX",
            "returnType": "float"
          },
          {
            "methodName": "getMixY",
            "returnType": "float"
          },
          {
            "methodName": "getMixScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getMixScaleY",
            "returnType": "float"
          },
          {
            "methodName": "getMixShearY",
            "returnType": "float"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Update",
      {
        "className": "Update",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/Update.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "BonePose",
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "TransformConstraint"
        ],
        "allImplementations": [
          "BonePose",
          "Constraint",
          "IkConstraint",
          "PathConstraint",
          "PhysicsConstraint",
          "Slider",
          "TransformConstraint"
        ]
      }
    ],
    [
      "AtlasAttachmentLoader",
      {
        "className": "AtlasAttachmentLoader",
        "superTypes": [
          "AttachmentLoader"
        ],
        "superTypeDetails": [
          {
            "name": "AttachmentLoader"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/AtlasAttachmentLoader.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Attachment",
      {
        "className": "Attachment",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/Attachment.java",
        "getters": [
          {
            "methodName": "getName",
            "returnType": "String"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "BoundingBoxAttachment",
          "ClippingAttachment",
          "MeshAttachment",
          "PathAttachment",
          "PointAttachment",
          "RegionAttachment",
          "SkeletonAttachment"
        ],
        "allImplementations": [
          "BoundingBoxAttachment",
          "ClippingAttachment",
          "MeshAttachment",
          "PathAttachment",
          "PointAttachment",
          "RegionAttachment",
          "SkeletonAttachment",
          "VertexAttachment"
        ]
      }
    ],
    [
      "AttachmentLoader",
      {
        "className": "AttachmentLoader",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/AttachmentLoader.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "AtlasAttachmentLoader"
        ],
        "allImplementations": [
          "AtlasAttachmentLoader"
        ]
      }
    ],
    [
      "AttachmentType",
      {
        "className": "AttachmentType",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/AttachmentType.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "region",
          "boundingbox",
          "mesh",
          "linkedmesh",
          "path",
          "point",
          "clipping",
          "sequence"
        ]
      }
    ],
    [
      "BoundingBoxAttachment",
      {
        "className": "BoundingBoxAttachment",
        "superTypes": [
          "VertexAttachment"
        ],
        "superTypeDetails": [
          {
            "name": "VertexAttachment"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/BoundingBoxAttachment.java",
        "getters": [
          {
            "methodName": "getColor",
            "returnType": "Color"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "ClippingAttachment",
      {
        "className": "ClippingAttachment",
        "superTypes": [
          "VertexAttachment"
        ],
        "superTypeDetails": [
          {
            "name": "VertexAttachment"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/ClippingAttachment.java",
        "getters": [
          {
            "methodName": "getEndSlot",
            "returnType": "@Null SlotData"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "HasTextureRegion",
      {
        "className": "HasTextureRegion",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/HasTextureRegion.java",
        "getters": [
          {
            "methodName": "getPath",
            "returnType": "String"
          },
          {
            "methodName": "getRegion",
            "returnType": "TextureRegion"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getSequence",
            "returnType": "@Null Sequence"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": true,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "MeshAttachment",
          "RegionAttachment"
        ],
        "allImplementations": [
          "MeshAttachment",
          "RegionAttachment"
        ]
      }
    ],
    [
      "MeshAttachment",
      {
        "className": "MeshAttachment",
        "superTypes": [
          "VertexAttachment",
          "HasTextureRegion"
        ],
        "superTypeDetails": [
          {
            "name": "VertexAttachment"
          },
          {
            "name": "HasTextureRegion"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/MeshAttachment.java",
        "getters": [
          {
            "methodName": "getRegion",
            "returnType": "@Null TextureRegion"
          },
          {
            "methodName": "getTriangles",
            "returnType": "short[]"
          },
          {
            "methodName": "getRegionUVs",
            "returnType": "float[]"
          },
          {
            "methodName": "getUVs",
            "returnType": "float[]"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getPath",
            "returnType": "String"
          },
          {
            "methodName": "getHullLength",
            "returnType": "int"
          },
          {
            "methodName": "getEdges",
            "returnType": "@Null short[]"
          },
          {
            "methodName": "getWidth",
            "returnType": "float"
          },
          {
            "methodName": "getHeight",
            "returnType": "float"
          },
          {
            "methodName": "getSequence",
            "returnType": "@Null Sequence"
          },
          {
            "methodName": "getParentMesh",
            "returnType": "@Null MeshAttachment"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PathAttachment",
      {
        "className": "PathAttachment",
        "superTypes": [
          "VertexAttachment"
        ],
        "superTypeDetails": [
          {
            "name": "VertexAttachment"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/PathAttachment.java",
        "getters": [
          {
            "methodName": "getClosed",
            "returnType": "boolean"
          },
          {
            "methodName": "getConstantSpeed",
            "returnType": "boolean"
          },
          {
            "methodName": "getLengths",
            "returnType": "float[]"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "PointAttachment",
      {
        "className": "PointAttachment",
        "superTypes": [
          "Attachment"
        ],
        "superTypeDetails": [
          {
            "name": "Attachment"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/PointAttachment.java",
        "getters": [
          {
            "methodName": "getX",
            "returnType": "float"
          },
          {
            "methodName": "getY",
            "returnType": "float"
          },
          {
            "methodName": "getRotation",
            "returnType": "float"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "RegionAttachment",
      {
        "className": "RegionAttachment",
        "superTypes": [
          "Attachment",
          "HasTextureRegion"
        ],
        "superTypeDetails": [
          {
            "name": "Attachment"
          },
          {
            "name": "HasTextureRegion"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/RegionAttachment.java",
        "getters": [
          {
            "methodName": "getRegion",
            "returnType": "@Null TextureRegion"
          },
          {
            "methodName": "getOffset",
            "returnType": "float[]"
          },
          {
            "methodName": "getUVs",
            "returnType": "float[]"
          },
          {
            "methodName": "getX",
            "returnType": "float"
          },
          {
            "methodName": "getY",
            "returnType": "float"
          },
          {
            "methodName": "getScaleX",
            "returnType": "float"
          },
          {
            "methodName": "getScaleY",
            "returnType": "float"
          },
          {
            "methodName": "getRotation",
            "returnType": "float"
          },
          {
            "methodName": "getWidth",
            "returnType": "float"
          },
          {
            "methodName": "getHeight",
            "returnType": "float"
          },
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getPath",
            "returnType": "String"
          },
          {
            "methodName": "getSequence",
            "returnType": "@Null Sequence"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Sequence.SequenceMode",
      {
        "className": "Sequence.SequenceMode",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/Sequence.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": true,
        "typeParameters": [],
        "enumValues": [
          "hold",
          "once",
          "loop",
          "pingpong",
          "onceReverse",
          "loopReverse",
          "pingpongReverse"
        ]
      }
    ],
    [
      "Sequence",
      {
        "className": "Sequence",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/Sequence.java",
        "getters": [
          {
            "methodName": "getStart",
            "returnType": "int"
          },
          {
            "methodName": "getDigits",
            "returnType": "int"
          },
          {
            "methodName": "getSetupIndex",
            "returnType": "int"
          },
          {
            "methodName": "getRegions",
            "returnType": "TextureRegion[]"
          },
          {
            "methodName": "getId",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonAttachment",
      {
        "className": "SkeletonAttachment",
        "superTypes": [
          "Attachment"
        ],
        "superTypeDetails": [
          {
            "name": "Attachment"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/SkeletonAttachment.java",
        "getters": [
          {
            "methodName": "getSkeleton",
            "returnType": "@Null Skeleton"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "VertexAttachment",
      {
        "className": "VertexAttachment",
        "superTypes": [
          "Attachment"
        ],
        "superTypeDetails": [
          {
            "name": "Attachment"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/attachments/VertexAttachment.java",
        "getters": [
          {
            "methodName": "getBones",
            "returnType": "@Null int[]"
          },
          {
            "methodName": "getVertices",
            "returnType": "float[]"
          },
          {
            "methodName": "getWorldVerticesLength",
            "returnType": "int"
          },
          {
            "methodName": "getTimelineAttachment",
            "returnType": "@Null Attachment"
          },
          {
            "methodName": "getId",
            "returnType": "int"
          }
        ],
        "fields": [],
        "isAbstract": true,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": [],
        "concreteImplementations": [
          "BoundingBoxAttachment",
          "ClippingAttachment",
          "MeshAttachment",
          "PathAttachment"
        ],
        "allImplementations": [
          "BoundingBoxAttachment",
          "ClippingAttachment",
          "MeshAttachment",
          "PathAttachment"
        ]
      }
    ],
    [
      "SkeletonActor",
      {
        "className": "SkeletonActor",
        "superTypes": [
          "Actor"
        ],
        "superTypeDetails": [
          {
            "name": "Actor"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonActor.java",
        "getters": [
          {
            "methodName": "getRenderer",
            "returnType": "SkeletonRenderer"
          },
          {
            "methodName": "getSkeleton",
            "returnType": "Skeleton"
          },
          {
            "methodName": "getAnimationState",
            "returnType": "AnimationState"
          },
          {
            "methodName": "getResetBlendFunction",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonActorPool",
      {
        "className": "SkeletonActorPool",
        "superTypes": [
          "Pool"
        ],
        "superTypeDetails": [
          {
            "name": "Pool",
            "typeArguments": [
              "SkeletonActor"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonActorPool.java",
        "getters": [
          {
            "methodName": "getObtained",
            "returnType": "Array<SkeletonActor>"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonClipping",
      {
        "className": "SkeletonClipping",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonClipping.java",
        "getters": [
          {
            "methodName": "getClippedVertices",
            "returnType": "FloatArray"
          },
          {
            "methodName": "getClippedUvs",
            "returnType": "FloatArray"
          },
          {
            "methodName": "getClippedTriangles",
            "returnType": "ShortArray"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonDataLoader.SkeletonDataParameter",
      {
        "className": "SkeletonDataLoader.SkeletonDataParameter",
        "superTypes": [
          "AssetLoaderParameters"
        ],
        "superTypeDetails": [
          {
            "name": "AssetLoaderParameters",
            "typeArguments": [
              "SkeletonData"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonDataLoader.java",
        "getters": [],
        "fields": [
          {
            "fieldName": "atlasName",
            "fieldType": "String",
            "isFinal": false
          },
          {
            "fieldName": "attachmentLoader",
            "fieldType": "AttachmentLoader",
            "isFinal": false
          },
          {
            "fieldName": "scale",
            "fieldType": "float",
            "isFinal": false
          }
        ],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonDataLoader",
      {
        "className": "SkeletonDataLoader",
        "superTypes": [
          "AsynchronousAssetLoader"
        ],
        "superTypeDetails": [
          {
            "name": "AsynchronousAssetLoader",
            "typeArguments": [
              "SkeletonData",
              "SkeletonDataLoader.SkeletonDataParameter"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonDataLoader.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonDrawable",
      {
        "className": "SkeletonDrawable",
        "superTypes": [
          "BaseDrawable"
        ],
        "superTypeDetails": [
          {
            "name": "BaseDrawable"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonDrawable.java",
        "getters": [
          {
            "methodName": "getRenderer",
            "returnType": "SkeletonRenderer"
          },
          {
            "methodName": "getSkeleton",
            "returnType": "Skeleton"
          },
          {
            "methodName": "getAnimationState",
            "returnType": "AnimationState"
          },
          {
            "methodName": "getResetBlendFunction",
            "returnType": "boolean"
          }
        ],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SkeletonPool",
      {
        "className": "SkeletonPool",
        "superTypes": [
          "Pool"
        ],
        "superTypeDetails": [
          {
            "name": "Pool",
            "typeArguments": [
              "Skeleton"
            ]
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SkeletonPool.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "SpineUtils",
      {
        "className": "SpineUtils",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/SpineUtils.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "Triangulator",
      {
        "className": "Triangulator",
        "superTypes": [],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/Triangulator.java",
        "getters": [],
        "fields": [],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ],
    [
      "TwoColorPolygonBatch",
      {
        "className": "TwoColorPolygonBatch",
        "superTypes": [
          "PolygonBatch"
        ],
        "superTypeDetails": [
          {
            "name": "PolygonBatch"
          }
        ],
        "file": "/Users/badlogic/workspaces/spine-runtimes/spine-libgdx/spine-libgdx/src/com/esotericsoftware/spine/utils/TwoColorPolygonBatch.java",
        "getters": [
          {
            "methodName": "getColor",
            "returnType": "Color"
          },
          {
            "methodName": "getPackedColor",
            "returnType": "float"
          },
          {
            "methodName": "getDarkColor",
            "returnType": "Color"
          },
          {
            "methodName": "getPackedDarkColor",
            "returnType": "float"
          },
          {
            "methodName": "getProjectionMatrix",
            "returnType": "Matrix4"
          },
          {
            "methodName": "getTransformMatrix",
            "returnType": "Matrix4"
          },
          {
            "methodName": "getPremultipliedAlpha",
            "returnType": "boolean"
          },
          {
            "methodName": "getShader",
            "returnType": "ShaderProgram"
          },
          {
            "methodName": "getDefaultShader",
            "returnType": "ShaderProgram"
          },
          {
            "methodName": "getBlendSrcFunc",
            "returnType": "int"
          },
          {
            "methodName": "getBlendDstFunc",
            "returnType": "int"
          },
          {
            "methodName": "getBlendSrcFuncAlpha",
            "returnType": "int"
          },
          {
            "methodName": "getBlendDstFuncAlpha",
            "returnType": "int"
          }
        ],
        "fields": [
          {
            "fieldName": "totalRenderCalls",
            "fieldType": "int",
            "isFinal": false
          }
        ],
        "isAbstract": false,
        "isInterface": false,
        "isEnum": false,
        "typeParameters": []
      }
    ]
  ],
  "accessibleTypes": [
    "AnimationState",
    "AnimationState.TrackEntry",
    "Animation",
    "Animation.RotateTimeline",
    "Animation.TranslateXTimeline",
    "Animation.TranslateYTimeline",
    "Animation.ScaleXTimeline",
    "Animation.ScaleYTimeline",
    "Animation.ShearXTimeline",
    "Animation.ShearYTimeline",
    "Animation.AlphaTimeline",
    "Animation.PathConstraintPositionTimeline",
    "Animation.PathConstraintSpacingTimeline",
    "Animation.PhysicsConstraintInertiaTimeline",
    "Animation.PhysicsConstraintStrengthTimeline",
    "Animation.PhysicsConstraintDampingTimeline",
    "Animation.PhysicsConstraintMassTimeline",
    "Animation.PhysicsConstraintWindTimeline",
    "Animation.PhysicsConstraintGravityTimeline",
    "Animation.PhysicsConstraintMixTimeline",
    "Animation.SliderTimeline",
    "Animation.SliderMixTimeline",
    "Animation.TranslateTimeline",
    "Animation.ScaleTimeline",
    "Animation.ShearTimeline",
    "Animation.RGBATimeline",
    "Animation.RGBTimeline",
    "Animation.RGBA2Timeline",
    "Animation.RGB2Timeline",
    "Animation.DeformTimeline",
    "Animation.IkConstraintTimeline",
    "Animation.TransformConstraintTimeline",
    "Animation.PathConstraintMixTimeline",
    "Animation.InheritTimeline",
    "Animation.AttachmentTimeline",
    "Animation.SequenceTimeline",
    "Animation.EventTimeline",
    "Animation.DrawOrderTimeline",
    "Animation.PhysicsConstraintResetTimeline",
    "Event",
    "EventData",
    "PointAttachment",
    "RegionAttachment",
    "SkeletonAttachment",
    "BoundingBoxAttachment",
    "ClippingAttachment",
    "MeshAttachment",
    "PathAttachment",
    "Sequence",
    "SlotData",
    "BoneData",
    "Skeleton",
    "PhysicsConstraint",
    "BonePose",
    "IkConstraint",
    "PathConstraint",
    "Slider",
    "TransformConstraint",
    "Bone",
    "Slot",
    "Skin",
    "IkConstraintData",
    "PathConstraintData",
    "PhysicsConstraintData",
    "SliderData",
    "TransformConstraintData",
    "TransformConstraintData.FromRotate",
    "TransformConstraintData.FromX",
    "TransformConstraintData.FromY",
    "TransformConstraintData.FromScaleX",
    "TransformConstraintData.FromScaleY",
    "TransformConstraintData.FromShearY",
    "TransformConstraintData.ToRotate",
    "TransformConstraintData.ToX",
    "TransformConstraintData.ToY",
    "TransformConstraintData.ToScaleX",
    "TransformConstraintData.ToScaleY",
    "TransformConstraintData.ToShearY",
    "Skin.SkinEntry",
    "SkeletonData",
    "AnimationStateData"
  ],
  "abstractTypes": [
    [
      "AnimationState.AnimationStateListener",
      []
    ],
    [
      "Animation.Timeline",
      [
        "Animation.AlphaTimeline",
        "Animation.AttachmentTimeline",
        "Animation.DeformTimeline",
        "Animation.DrawOrderTimeline",
        "Animation.EventTimeline",
        "Animation.IkConstraintTimeline",
        "Animation.InheritTimeline",
        "Animation.PathConstraintMixTimeline",
        "Animation.PathConstraintPositionTimeline",
        "Animation.PathConstraintSpacingTimeline",
        "Animation.PhysicsConstraintDampingTimeline",
        "Animation.PhysicsConstraintGravityTimeline",
        "Animation.PhysicsConstraintInertiaTimeline",
        "Animation.PhysicsConstraintMassTimeline",
        "Animation.PhysicsConstraintMixTimeline",
        "Animation.PhysicsConstraintResetTimeline",
        "Animation.PhysicsConstraintStrengthTimeline",
        "Animation.PhysicsConstraintWindTimeline",
        "Animation.RGB2Timeline",
        "Animation.RGBA2Timeline",
        "Animation.RGBATimeline",
        "Animation.RGBTimeline",
        "Animation.RotateTimeline",
        "Animation.ScaleTimeline",
        "Animation.ScaleXTimeline",
        "Animation.ScaleYTimeline",
        "Animation.SequenceTimeline",
        "Animation.ShearTimeline",
        "Animation.ShearXTimeline",
        "Animation.ShearYTimeline",
        "Animation.SliderMixTimeline",
        "Animation.SliderTimeline",
        "Animation.TransformConstraintTimeline",
        "Animation.TranslateTimeline",
        "Animation.TranslateXTimeline",
        "Animation.TranslateYTimeline"
      ]
    ],
    [
      "VertexAttachment",
      [
        "BoundingBoxAttachment",
        "ClippingAttachment",
        "MeshAttachment",
        "PathAttachment"
      ]
    ],
    [
      "Attachment",
      [
        "BoundingBoxAttachment",
        "ClippingAttachment",
        "MeshAttachment",
        "PathAttachment",
        "PointAttachment",
        "RegionAttachment",
        "SkeletonAttachment"
      ]
    ],
    [
      "Update",
      [
        "BonePose",
        "IkConstraint",
        "PathConstraint",
        "PhysicsConstraint",
        "Slider",
        "TransformConstraint"
      ]
    ],
    [
      "Constraint",
      [
        "IkConstraint",
        "PathConstraint",
        "PhysicsConstraint",
        "Slider",
        "TransformConstraint"
      ]
    ],
    [
      "ConstraintData",
      [
        "IkConstraintData",
        "PathConstraintData",
        "PhysicsConstraintData",
        "SliderData",
        "TransformConstraintData"
      ]
    ],
    [
      "TransformConstraintData.FromProperty",
      [
        "TransformConstraintData.FromRotate",
        "TransformConstraintData.FromScaleX",
        "TransformConstraintData.FromScaleY",
        "TransformConstraintData.FromShearY",
        "TransformConstraintData.FromX",
        "TransformConstraintData.FromY"
      ]
    ]
  ],
  "allTypesToGenerate": [
    "AnimationState",
    "AnimationState.TrackEntry",
    "Animation",
    "Animation.RotateTimeline",
    "Animation.TranslateXTimeline",
    "Animation.TranslateYTimeline",
    "Animation.ScaleXTimeline",
    "Animation.ScaleYTimeline",
    "Animation.ShearXTimeline",
    "Animation.ShearYTimeline",
    "Animation.AlphaTimeline",
    "Animation.PathConstraintPositionTimeline",
    "Animation.PathConstraintSpacingTimeline",
    "Animation.PhysicsConstraintInertiaTimeline",
    "Animation.PhysicsConstraintStrengthTimeline",
    "Animation.PhysicsConstraintDampingTimeline",
    "Animation.PhysicsConstraintMassTimeline",
    "Animation.PhysicsConstraintWindTimeline",
    "Animation.PhysicsConstraintGravityTimeline",
    "Animation.PhysicsConstraintMixTimeline",
    "Animation.SliderTimeline",
    "Animation.SliderMixTimeline",
    "Animation.TranslateTimeline",
    "Animation.ScaleTimeline",
    "Animation.ShearTimeline",
    "Animation.RGBATimeline",
    "Animation.RGBTimeline",
    "Animation.RGBA2Timeline",
    "Animation.RGB2Timeline",
    "Animation.DeformTimeline",
    "Animation.IkConstraintTimeline",
    "Animation.TransformConstraintTimeline",
    "Animation.PathConstraintMixTimeline",
    "Animation.InheritTimeline",
    "Animation.AttachmentTimeline",
    "Animation.SequenceTimeline",
    "Animation.EventTimeline",
    "Animation.DrawOrderTimeline",
    "Animation.PhysicsConstraintResetTimeline",
    "Event",
    "EventData",
    "PointAttachment",
    "RegionAttachment",
    "BoundingBoxAttachment",
    "ClippingAttachment",
    "MeshAttachment",
    "PathAttachment",
    "Sequence",
    "SlotData",
    "BoneData",
    "Skeleton",
    "PhysicsConstraint",
    "BonePose",
    "IkConstraint",
    "PathConstraint",
    "Slider",
    "TransformConstraint",
    "Bone",
    "Slot",
    "Skin",
    "IkConstraintData",
    "PathConstraintData",
    "PhysicsConstraintData",
    "SliderData",
    "TransformConstraintData",
    "TransformConstraintData.FromRotate",
    "TransformConstraintData.FromX",
    "TransformConstraintData.FromY",
    "TransformConstraintData.FromScaleX",
    "TransformConstraintData.FromScaleY",
    "TransformConstraintData.FromShearY",
    "TransformConstraintData.ToRotate",
    "TransformConstraintData.ToX",
    "TransformConstraintData.ToY",
    "TransformConstraintData.ToScaleX",
    "TransformConstraintData.ToScaleY",
    "TransformConstraintData.ToShearY",
    "Skin.SkinEntry",
    "SkeletonData",
    "AnimationStateData",
    "SlotPose",
    "BoneLocal",
    "PhysicsConstraintPose",
    "IkConstraintPose",
    "PathConstraintPose",
    "SliderPose",
    "TransformConstraintPose"
  ],
  "typeProperties": [
    [
      "AnimationState",
      [
        {
          "name": "getTimeScale()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "AnimationStateData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTracks()",
          "type": "Array<TrackEntry>",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "AnimationState.TrackEntry",
      [
        {
          "name": "getTrackIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAnimation()",
          "type": "Animation",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLoop()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDelay()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTrackTime()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTrackEnd()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTrackComplete()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAnimationStart()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAnimationEnd()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAnimationLast()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAnimationTime()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTimeScale()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getListener()",
          "type": "@Null AnimationStateListener",
          "isGetter": true,
          "excluded": true
        },
        {
          "name": "getAlpha()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getEventThreshold()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAlphaAttachmentThreshold()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixAttachmentThreshold()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixDrawOrderThreshold()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getNext()",
          "type": "@Null TrackEntry",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPrevious()",
          "type": "@Null TrackEntry",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixTime()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixDuration()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixBlend()",
          "type": "MixBlend",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixingFrom()",
          "type": "@Null TrackEntry",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixingTo()",
          "type": "@Null TrackEntry",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getHoldPrevious()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getShortestRotation()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getReverse()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "Animation",
      [
        {
          "name": "getTimelines()",
          "type": "Array<Timeline>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "IntArray",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "Animation.RotateTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.TranslateXTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.TranslateYTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.ScaleXTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.ScaleYTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.ShearXTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.ShearYTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.AlphaTimeline",
      [
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PathConstraintPositionTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PathConstraintSpacingTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintInertiaTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintStrengthTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintDampingTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintMassTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintWindTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintGravityTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintMixTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.SliderTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.SliderMixTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.ConstraintTimeline1",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.CurveTimeline1",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.TranslateTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline2",
          "excluded": false
        },
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline2",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.ScaleTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline2",
          "excluded": false
        },
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline2",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.ShearTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline2",
          "excluded": false
        },
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.BoneTimeline2",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.RGBATimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.SlotCurveTimeline",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.RGBTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.SlotCurveTimeline",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.RGBA2Timeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.SlotCurveTimeline",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.RGB2Timeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.SlotCurveTimeline",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.DeformTimeline",
      [
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAttachment()",
          "type": "VertexAttachment",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVertices()",
          "type": "float[][]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.SlotCurveTimeline",
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.IkConstraintTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.TransformConstraintTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PathConstraintMixTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.InheritTimeline",
      [
        {
          "name": "getBoneIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.AttachmentTimeline",
      [
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAttachmentNames()",
          "type": "String[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.SequenceTimeline",
      [
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAttachment()",
          "type": "Attachment",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.EventTimeline",
      [
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getEvents()",
          "type": "Event[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.DrawOrderTimeline",
      [
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDrawOrders()",
          "type": "int[][]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Animation.PhysicsConstraintResetTimeline",
      [
        {
          "name": "getConstraintIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "Animation.Timeline",
          "excluded": false
        }
      ]
    ],
    [
      "Event",
      [
        {
          "name": "getInt()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFloat()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getString()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVolume()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBalance()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTime()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "EventData",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "EventData",
      [
        {
          "name": "getInt()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFloat()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getString()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAudioPath()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVolume()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBalance()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "PointAttachment",
      [
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRotation()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "RegionAttachment",
      [
        {
          "name": "getRegion()",
          "type": "@Null TextureRegion",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffset()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getUVs()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRotation()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWidth()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getHeight()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPath()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSequence()",
          "type": "@Null Sequence",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "BoundingBoxAttachment",
      [
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "@Null int[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getVertices()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getWorldVerticesLength()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getTimelineAttachment()",
          "type": "@Null Attachment",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getId()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "ClippingAttachment",
      [
        {
          "name": "getEndSlot()",
          "type": "@Null SlotData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "@Null int[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getVertices()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getWorldVerticesLength()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getTimelineAttachment()",
          "type": "@Null Attachment",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getId()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "MeshAttachment",
      [
        {
          "name": "getRegion()",
          "type": "@Null TextureRegion",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTriangles()",
          "type": "short[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRegionUVs()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getUVs()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPath()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getHullLength()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getEdges()",
          "type": "@Null short[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWidth()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getHeight()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSequence()",
          "type": "@Null Sequence",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getParentMesh()",
          "type": "@Null MeshAttachment",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "@Null int[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getVertices()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getWorldVerticesLength()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getTimelineAttachment()",
          "type": "@Null Attachment",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getId()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "PathAttachment",
      [
        {
          "name": "getClosed()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstantSpeed()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLengths()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "@Null int[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getVertices()",
          "type": "float[]",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getWorldVerticesLength()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getTimelineAttachment()",
          "type": "@Null Attachment",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getId()",
          "type": "int",
          "isGetter": true,
          "inheritedFrom": "VertexAttachment",
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "Sequence",
      [
        {
          "name": "getStart()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDigits()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSetupIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRegions()",
          "type": "TextureRegion[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getId()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "SlotData",
      [
        {
          "name": "getIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBoneData()",
          "type": "BoneData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAttachmentName()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBlendMode()",
          "type": "BlendMode",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVisible()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "SlotPose",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "BoneData",
      [
        {
          "name": "getIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getParent()",
          "type": "@Null BoneData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLength()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getIcon()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVisible()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "BoneLocal",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "Skeleton",
      [
        {
          "name": "getData()",
          "type": "SkeletonData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "Array<Bone>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getUpdateCache()",
          "type": "Array<Update>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRootBone()",
          "type": "Bone",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlots()",
          "type": "Array<Slot>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDrawOrder()",
          "type": "Array<Slot>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSkin()",
          "type": "@Null Skin",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstraints()",
          "type": "Array<Constraint>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPhysicsConstraints()",
          "type": "Array<PhysicsConstraint>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWindX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWindY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getGravityX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getGravityY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTime()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "PhysicsConstraint",
      [
        {
          "name": "getBone()",
          "type": "BonePose",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "PhysicsConstraintData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "PhysicsConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "PhysicsConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "BonePose",
      [
        {
          "name": "getA()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getB()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getC()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getD()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldRotationX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldRotationY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldScaleY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getRotation()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getScaleX()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getScaleY()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getShearX()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getShearY()",
          "type": "float",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        },
        {
          "name": "getInherit()",
          "type": "Inherit",
          "isGetter": true,
          "inheritedFrom": "BoneLocal",
          "excluded": false
        }
      ]
    ],
    [
      "IkConstraint",
      [
        {
          "name": "getBones()",
          "type": "Array<BonePose>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTarget()",
          "type": "Bone",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "IkConstraintData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "IkConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "IkConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "PathConstraint",
      [
        {
          "name": "getBones()",
          "type": "Array<BonePose>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlot()",
          "type": "Slot",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "PathConstraintData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "PathConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "PathConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "Slider",
      [
        {
          "name": "getBone()",
          "type": "Bone",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "SliderData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "SliderPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "SliderPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraint",
      [
        {
          "name": "getBones()",
          "type": "Array<BonePose>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSource()",
          "type": "Bone",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "TransformConstraintData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "TransformConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "TransformConstraintPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "Bone",
      [
        {
          "name": "getParent()",
          "type": "@Null Bone",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getChildren()",
          "type": "Array<Bone>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "BoneData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "BoneLocal",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "BonePose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "Slot",
      [
        {
          "name": "getBone()",
          "type": "Bone",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getData()",
          "type": "SlotData",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "SlotPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "SlotPose",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "Skin",
      [
        {
          "name": "getAttachments()",
          "type": "Array<SkinEntry>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBones()",
          "type": "Array<BoneData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstraints()",
          "type": "Array<ConstraintData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "IkConstraintData",
      [
        {
          "name": "getBones()",
          "type": "Array<BoneData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTarget()",
          "type": "BoneData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getUniform()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "IkConstraintPose",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "PathConstraintData",
      [
        {
          "name": "getBones()",
          "type": "Array<BoneData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlot()",
          "type": "SlotData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getPositionMode()",
          "type": "PositionMode",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSpacingMode()",
          "type": "SpacingMode",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRotateMode()",
          "type": "RotateMode",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetRotation()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "PathConstraintPose",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "PhysicsConstraintData",
      [
        {
          "name": "getBone()",
          "type": "BoneData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getStep()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRotate()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getShearX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLimit()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getInertiaGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getStrengthGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDampingGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMassGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWindGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getGravityGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixGlobal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "PhysicsConstraintPose",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "SliderData",
      [
        {
          "name": "getAnimation()",
          "type": "Animation",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAdditive()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLoop()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBone()",
          "type": "@Null BoneData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getProperty()",
          "type": "@Null FromProperty",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffset()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScale()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLocal()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "SliderPose",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData",
      [
        {
          "name": "getBones()",
          "type": "Array<BoneData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSource()",
          "type": "BoneData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetRotation()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetScaleY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getOffsetShearY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLocalSource()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getLocalTarget()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAdditive()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getClamp()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getProperties()",
          "type": "Array<FromProperty>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "TransformConstraintPose",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromRotate",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromX",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromY",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromScaleX",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromScaleY",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromShearY",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.FromProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.ToRotate",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "max",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "scale",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.ToX",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "max",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "scale",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.ToY",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "max",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "scale",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.ToScaleX",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "max",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "scale",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.ToScaleY",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "max",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "scale",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.ToShearY",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "max",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        },
        {
          "name": "scale",
          "type": "float",
          "isGetter": false,
          "inheritedFrom": "TransformConstraintData.ToProperty",
          "excluded": false
        }
      ]
    ],
    [
      "Skin.SkinEntry",
      [
        {
          "name": "getSlotIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAttachment()",
          "type": "Attachment",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "SkeletonData",
      [
        {
          "name": "getBones()",
          "type": "Array<BoneData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSlots()",
          "type": "Array<SlotData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDefaultSkin()",
          "type": "@Null Skin",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSkins()",
          "type": "Array<Skin>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getEvents()",
          "type": "Array<EventData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAnimations()",
          "type": "Array<Animation>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getConstraints()",
          "type": "Array<ConstraintData>",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWidth()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getHeight()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getReferenceScale()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVersion()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getHash()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getImagesPath()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAudioPath()",
          "type": "@Null String",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFps()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "AnimationStateData",
      [
        {
          "name": "getSkeletonData()",
          "type": "SkeletonData",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDefaultMix()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "Animation.Timeline",
      [
        {
          "name": "getPropertyIds()",
          "type": "String[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFrames()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFrameEntries()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getFrameCount()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDuration()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "VertexAttachment",
      [
        {
          "name": "getBones()",
          "type": "@Null int[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getVertices()",
          "type": "float[]",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWorldVerticesLength()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getTimelineAttachment()",
          "type": "@Null Attachment",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getId()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "Attachment",
          "excluded": false
        }
      ]
    ],
    [
      "Attachment",
      [
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "Update",
      []
    ],
    [
      "Constraint",
      [
        {
          "name": "getData()",
          "type": "D",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getPose()",
          "type": "P",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        },
        {
          "name": "getAppliedPose()",
          "type": "P",
          "isGetter": true,
          "inheritedFrom": "Posed",
          "excluded": false
        }
      ]
    ],
    [
      "ConstraintData",
      [
        {
          "name": "getName()",
          "type": "String",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSetupPose()",
          "type": "P",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        },
        {
          "name": "getSkinRequired()",
          "type": "boolean",
          "isGetter": true,
          "inheritedFrom": "PosedData",
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintData.FromProperty",
      [
        {
          "name": "offset",
          "type": "float",
          "isGetter": false,
          "excluded": false
        },
        {
          "name": "to",
          "type": "Array<ToProperty>",
          "isGetter": false,
          "excluded": false
        }
      ]
    ],
    [
      "SlotPose",
      [
        {
          "name": "getColor()",
          "type": "Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDarkColor()",
          "type": "@Null Color",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getAttachment()",
          "type": "@Null Attachment",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSequenceIndex()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDeform()",
          "type": "FloatArray",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "BoneLocal",
      [
        {
          "name": "getX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getRotation()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getScaleY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getShearX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getShearY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getInherit()",
          "type": "Inherit",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "PhysicsConstraintPose",
      [
        {
          "name": "getInertia()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getStrength()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getDamping()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMassInverse()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getWind()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getGravity()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMix()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "IkConstraintPose",
      [
        {
          "name": "getMix()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSoftness()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getBendDirection()",
          "type": "int",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getCompress()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getStretch()",
          "type": "boolean",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "PathConstraintPose",
      [
        {
          "name": "getPosition()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getSpacing()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixRotate()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "SliderPose",
      [
        {
          "name": "getTime()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMix()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ],
    [
      "TransformConstraintPose",
      [
        {
          "name": "getMixRotate()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixScaleX()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixScaleY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        },
        {
          "name": "getMixShearY()",
          "type": "float",
          "isGetter": true,
          "excluded": false
        }
      ]
    ]
  ]
}